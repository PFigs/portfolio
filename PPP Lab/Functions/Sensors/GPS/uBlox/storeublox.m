function storeublox( message, path )
%STORE saves data to a file for offline processing
    


    % Saves Ephemerides
    if isstruct(message.eph) && strcmpi(message.msgID,'EPH')
        message = message.eph;
        id      = message.update; % last line has the same info in every collumn
        message = message.data;   % access matrix;
        fid = fopen(strcat(path,'eph/',date,'ephemerides',sprintf('%2d',id),'.txt'),'a');
        fprintf(fid,'%d %d 0 %d %32.32f %32.32f 0 %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f 0 %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f %32.32f\r\n',...
                    id, ...
                    message(ephidx('WN'),id)    , message(ephidx('URA'),id),...
                    message(ephidx('Health'),id), message(ephidx('IODC'),id),...
                    message(ephidx('TGD'),id)   , message(ephidx('TOC'),id),...
                    message(ephidx('AF2'),id)   , message(ephidx('AF1'),id),...
                    message(ephidx('AF0'),id)   , message(ephidx('IODE'),id),... %written 2 times!
                    message(ephidx('IODE'),id)  , message(ephidx('TOE'),id),... 
                    message(ephidx('M0'),id)    , message(ephidx('ECC'),id),...
                    message(ephidx('SQRA'),id)  , message(ephidx('DN'),id),...
                    message(ephidx('Omega0'),id), message(ephidx('I0'),id),...
                    message(ephidx('Omega'),id) , message(ephidx('Omegadot'),id),... 
                    message(ephidx('IDOT'),id)  , message(ephidx('CRC'),id),...
                    message(ephidx('CRS'),id)   , message(ephidx('CUC'),id),...
                    message(ephidx('CUS'),id)   , message(ephidx('CIC'),id),...
                    message(ephidx('CIS'),id)   , message(ephidx('TOW'),id));
        fclose(fid);

    % Saves ranges
    elseif strcmpi(message.msgID,'RAW') && isstruct(message.ranges)
        message = message.ranges;
        satlist = message.SATLIST(message.SATLIST > 0); %retrieves the satellites identifiers
        satlist = satlist(satlist <= 32);
        if length(satlist) >= 4
            for id = satlist;
                measures = message.PRL1(id) && message.CPL1(id) ;
               % quality = ~message.WARNINGL1(id) && ~message.WARNINGL2(id);
                if measures %&& quality
                    fid = fopen(strcat(path,'mes/',date,'pseudoranges',sprintf('%02d',id),'.txt'),'a');
                    fprintf(fid,'%32.32f\t%32.32f\t%32.32f\t%32.32f\t%d\t%32.32f\t%32.32f\r\n',...
                               message.PRL1(id), message.CPL1(id),...
                               message.WARNINGL1(id), message.QUALITYL1(id),...
                               message.TOW,...
                               message.DOL1(id), message.SNRL1(id));
                    fclose(fid);
                end
            end
        end

    % Saves ionosphere information
    elseif strcmpi(message.msgID,'HUI')
        if isstruct(message.iono)
           message = message.iono;   
           fid = fopen(strcat(path,'ion/ionosphere.txt'),'a');
           fprintf(fid,'%32.32f\t%32.32f\t%32.32f\t%32.32f\t%32.32f\t%32.32f\t%32.32f\t%32.32f\t%32.32f\r\n',...
                       message.alpha(1), message.alpha(2),...
                       message.alpha(3), message.alpha(4),...
                       message.beta(1), message.beta(2),...
                       message.beta(3), message.beta(4),...
                       message.utcTOW);
           fclose(fid);
        end
    else
        warning('UBLOX:store',['Ooooops! failed to save data for ' sprintf('%s',message.msgID)]);
    end

end

